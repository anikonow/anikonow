clear; close all; clc;

% toy example of chance of collision with a solid obstacle
L = 10; % dimension of a square environment

% grid over which probability is defined
Nx = 20;
Ny = Nx;
xgrid = linspace(0,L,Nx);
ygrid = linspace(0,L,Ny);
delx = xgrid(2) - xgrid(1);
dely = ygrid(2) - ygrid(1);
[xx,yy] = meshgrid(xgrid,ygrid);

shallowcut= [-1,1]; %shallow water cutoff region

% Shallow water define region
V= .1*sin(0.1*yy).*cos(0.1*xx)+cos(0.055*yy-0.1*xx);%var
V(yy < 4 & xx > 8) = 0;

B= sin(0.6*xx).*2*cos(0.31*yy)+cos(0.05*xx-0.21*yy)-15;%bath
B(yy < 4 & xx >8) = 0;
obx = [8.5 8.5 10 10];
oby = [0 4 4 0];
obz = [1 1 1 1]*10;
figure('Position', [100, 100, 1000, 500]); % [x, y, width, height]
hold on
subplot(1, 2, 1)
hold on
surf(xx, yy, V, 'EdgeColor', 'None');
plot3(obx,oby,obz,'r')
view(2)
colorbar;
xlabel('x-axis (m)');
ylabel('y-axis (m)');
ylabel(colorbar, 'z-axis (m)')
title('Bathymetry Variance');
axis equal;
xlim([0 L]);
ylim([0 L]);
colormap(gca, flip(gray)); % Apply grayscale colormap to the current axes

% Bottom plot (normal colors)
subplot(1, 2, 2)
hold on
surf(xx, yy, B, 'EdgeColor', 'None');
plot3(obx,oby,obz,'r')
view(2)
colorbar;
xlabel('x-axis (m)');
ylabel('y-axis (m)');
ylabel(colorbar, 'z-axis (m)')
title('Kriged Bathymetry');
axis equal;
xlim([0 L]);
ylim([0 L]);
colormap(gca, parula); % Apply default colormap to the current axes

hold off



% p.d.f Vessel
mu = [5; 5]; % mean
sigma = [(5/3).^2 0;0 (5/3).^2]; %comeback to it

% loop
for i = 1:1:Nx
    for j = 1:1:Ny
        % get the center of each cell
        xi = xx(i,j);
        yj = yy(i,j);
        % arrange as a vector and check prob
        z = [xi; yj]; 
        pp(i,j) = mvnpdf(z,mu,sigma);
        % define a square cell polygon
        cx = [0 0 1 1]*delx+xi;
        cy = [0 1 1 0]*dely+yj;
        
        om(i,j) = 0; % assume no obstacle
        for k = 1:1:4
       
        p1=normcdf(shallowcut(1,1), B(i,j),V(i,j));
        p2=normcdf(shallowcut(1,2), B(i,j),V(i,j));
        om(i,j) = p2-p1;
        end
    end
end
% we have to normalize the probability so it sums to one
pp = pp/(sum(sum(pp)));


for i = 1:3
[V,D]=eig(sigma);
a=sqrt(D(1,1));
b=sqrt(D(2,2));

theta = atan2(V(2,1),V(1,1));

t = linspace(0,2*pi,180);

x=a*cos(t);
y=b*sin(t);

R=[cos(theta), -sin(theta);  sin(theta),  cos(theta)];

ellipse_pts =i* R * [x; y] + mu;
anser{i,:} = ellipse_pts;
end



% probability map
figure;
set(gcf,'Units','inches')
set(gcf,'Position',[2 2 16 4])
subplot(1,3,1)
hold on
surf(xx,yy,pp);
for i= 1:3
plot3(anser{i,1}(1,:), anser{i,1}(2,:),ones(size(ellipse_pts,2),1)', 'r', 'LineWidth', 2);
end
view(2);
title('Vessel Uncertainty');
xlabel('X (m)')
ylabel('Y (m)')
%plot3(xpoly,ypoly,ones(size(xpoly))*max(max(pp))+0.1,'ro-','linewidth',2);
colorbar;
xlim([0 L]);
ylim([0 L]);


subplot(1,3,2)
surf(xx,yy,om);
view(2);
hold on;
title('Obstacle Presence');
xlabel('X (m)')
ylabel('Y (m)')
colorbar;
xlim([0 L]);
ylim([0 L]);


% probabilities only over obstacle
pobs = om.*pp;

% plot
subplot(1,3,3)
surf(xx,yy,pobs);
title('Collision Risk');
xlabel('X (m)')
ylabel('Y (m)')
view(2);
hold on;
%plot3(xpoly,ypoly,ones(size(xpoly))+0.1,'ro-','linewidth',2);
hold on;
colorbar;
xlim([0 L]);
ylim([0 L]);

% chance of collision
collisionChance = sum(sum(pobs));
fprintf('Collision probability is %3.3f percent \n',collisionChance*100)